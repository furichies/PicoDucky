#Example 1 - Control individual LED

from neopixel import Neopixel
import utime
import random

numpix = 256
strip = Neopixel(numpix, 0, 28, "RGB")

red = (255, 0, 0)

red = (255, 0, 0)
orange = (255, 50, 0)
yellow = (255, 100, 0)
green = (0, 255, 0)
blue = (0, 0, 255)
indigo = (100, 0, 90)
violet = (200, 0, 100)
colors_rgb = [red, orange, yellow, green, blue, indigo, violet]

delay = 0.5
strip.brightness(42)
blank = (0,0,0)

NUMBERS = [[
  0b00000000,
  0b11100000,
  0b10100000,
  0b10100000,
  0b10100000,
  0b11100000,
  0b00000000,
  0b00000000
],[
  0b00000000,
  0b11000000,
  0b01000000,
  0b01000000,
  0b01000000,
  0b01000000,
  0b11100000,
  0b00000000
],[
  0b00000000,
  0b11100000,
  0b00100000,
  0b11100000,
  0b10000000,
  0b11100000,
  0b00000000,
  0b00000000
],[
  0b00000000,
  0b11100000,
  0b00100000,
  0b11100000,
  0b00100000,
  0b11100000,
  0b00000000,
  0b00000000
],[
  0b00000000,
  0b10100000,
  0b10100000,
  0b11100000,
  0b00100000,
  0b00100000,
  0b00000000,
  0b00000000
],[
  0b00000000,
  0b11100000,
  0b10000000,
  0b11100000,
  0b00100000,
  0b11100000,
  0b00000000,
  0b00000000
],[
  0b00000000,
  0b11100000,
  0b10000000,
  0b11100000,
  0b10100000,
  0b11100000,
  0b00000000,
  0b00000000
],[
  0b00000000,
  0b11100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00100000,
  0b00000000,
  0b00000000
],[
  0b00000000,
  0b11100000,
  0b10100000,
  0b11100000,
  0b10100000,
  0b11100000,
  0b00000000,
  0b00000000
],[
  0b00000000,
  0b11100000,
  0b10100000,
  0b11100000,
  0b00100000,
  0b11100000,
  0b00000000,
  0b00000000
]
           ]


def generate_remap():
    remap = []
    for i in range(0,32):
        for j in range(0,8):
            if i%2 == 0:
                remap.append(i*8+j)
            else:
                remap.append(8-j-1 + i*8)
    return remap
    
def get_index(x,y):
    ind = x*8+y
    remap = generate_remap()
    return remap[ind]

# NUMBERS = [[
#   0b00000000,
#   0b11100000,
#   0b10100000,
#   0b10100000,
#   0b10100000,
#   0b11100000,
#   0b00000000,
#   0b00000000
# ],[
#   0b00000000,
#   0b11000000,
#   0b01000000,
#   0b01000000,
#   0b01000000,
#   0b01000000,
#   0b11100000,
#   0b00000000
# ]]

def set_pixel(x,y): 
    strip.set_pixel(get_index(x,y),red)

def draw_image(img,offset=0):
    for i in range(0,len(img)):
        for x in range(0,8):
            row = img[i]
            x_left = 8-x-1 # count from left
            is_set = ( row & (1 << x_left) ) > 0
            if is_set:
                set_pixel(x+offset,i)
            print(x,i,is_set)
print(len( generate_remap()))
draw_image(NUMBERS[8], offset=29)
draw_image(NUMBERS[3], offset=4)
draw_image(NUMBERS[5], offset=10)
# def set_pixel(x,y):
#     ind = get_index(x,y)
#     print(ind)
#     strip.set_pixel(ind, (255,0,0) )




#strip.set_pixel(random.randint(0, numpix-1), colors_rgb[random.randint(0, len(colors_rgb)-1)])
#strip.set_pixel(random.randint(0, numpix-1), colors_rgb[random.randint(0, len(colors_rgb)-1)])
#strip.set_pixel(random.randint(0, numpix-1), colors_rgb[random.randint(0, len(colors_rgb)-1)])
#strip.set_pixel(random.randint(0, numpix-1), colors_rgb[random.randint(0, len(colors_rgb)-1)])
#strip.set_pixel(random.randint(0, numpix-1), colors_rgb[random.randint(0, len(colors_rgb)-1)])
strip.show()
utime.sleep(delay)

print(NUMBERS)





    
    
        
          
